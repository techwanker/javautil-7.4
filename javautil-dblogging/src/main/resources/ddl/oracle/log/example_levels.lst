SQL> 
SQL> create or replace procedure
  2  example_levels is
  3  begin
  4  	 pllog.log('severe',1);
  5  	 pllog.log('warning',2,$$plsql_unit);
  6  	 pllog.log('undefined',3,$$plsql_unit);
  7  	 pllog.log('info',4);
  8  	 pllog.log('verbose',6);
  9  	 pllog.log('debug',7);
 10  	 pllog.log('trace',9);
 11  end;
 12  /

Procedure created.

SQL> --#<
SQL> begin
  2  	example_levels;
  3  end;
  4  /
log()  skip caller:  line  my_logger_level  p_log_level 1 g_job_log.log_level   
get_log_level()  p_logger_name *EXAMPLE_LEVELS my_logger_name *EXAMPLE_LEVELS*  
>>                                                                              
logger not found EXAMPLE_LEVELS                                                 
get_log_level()  loggerEXAMPLE_LEVELS was not  found  level  retval             
log()  skip caller: EXAMPLE_LEVELS line  my_logger_level  p_log_level 2         
g_job_log.log_level                                                             
get_log_level()  p_logger_name *EXAMPLE_LEVELS my_logger_name *EXAMPLE_LEVELS*  
>>                                                                              
logger not found EXAMPLE_LEVELS                                                 
get_log_level()  loggerEXAMPLE_LEVELS was not  found  level  retval             
log()  skip caller: EXAMPLE_LEVELS line  my_logger_level  p_log_level 3         
g_job_log.log_level                                                             
log()  skip caller:  line  my_logger_level  p_log_level 4 g_job_log.log_level   
log()  skip caller:  line  my_logger_level  p_log_level 6 g_job_log.log_level   
log()  skip caller:  line  my_logger_level  p_log_level 7 g_job_log.log_level   
log()  skip caller:  line  my_logger_level  p_log_level 9 g_job_log.log_level   

PL/SQL procedure successfully completed.

SQL> 
SQL> exit
