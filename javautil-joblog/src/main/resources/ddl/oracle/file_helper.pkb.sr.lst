SQL> --#>
SQL> --/<
SQL> CREATE OR REPLACE PACKAGE BODY file_helper
  2  is
  3    g_debug		       boolean := false;
  4    g_job_msg_dir	       varchar (32) := 'JOB_MSG_DIR';
  5    g_logfile_name	       varchar(255);
  6  
  7  
  8   /*
  9    --%<
 10    function get_my_tracefile_name
 11    return varchar
 12    --%>
 13    is
 14  	 tracefile_name varchar(4096);
 15  	 begin
 16  	     select value into tracefile_name
 17  	     from v$diag_info
 18  	     where name = 'Default Trace File';
 19  
 20  	     return tracefile_name;
 21  	 end get_my_tracefile_name;
 22  	*/
 23  
 24    function open_log_file (
 25  	     directory_name in varchar,
 26  	     file_name in varchar,
 27  	     headers in boolean default true)
 28    return utl_file.file_type
 29  	--
 30  	--% opens a log file with the specified file name in the directory g_job_msg_dir
 31    is
 32  	   my_directory_path varchar2(4000);
 33  	   my_handle utl_file.file_type;
 34    begin
 35  	   if (g_debug) then
 36  	       dbms_output.put_line('open_log_file() dir: "' || directory_name ||
 37  				'" file: "' || file_name || '"');
 38  	   end if;
 39  	   my_handle := utl_file.fopen(directory_name,file_name,'a');
 40  	   return my_handle;
 41    end open_log_file;
 42  
 43    function get_directory_path return varchar is
 44  	    -- todo see if grants are wrong, permission must be granted to the user
 45  	    cursor directory_cur is
 46  	    select  owner, directory_name, directory_path
 47  	    from    all_directories
 48  	    where   directory_name = g_job_msg_dir;
 49  
 50  	    directory_rec directory_cur%rowtype;
 51  
 52    begin
 53  	     open directory_cur;
 54  	     fetch directory_cur into directory_rec;
 55  	     dbms_output.put_line('owner: '	      || directory_rec.owner ||
 56  				' directory_name: ' || directory_rec.directory_name ||
 57  				' directory_path: ' || directory_rec.directory_path);
 58  	    close directory_cur;
 59  
 60  	    return directory_rec.directory_path;
 61    end get_directory_path;
 62    --::<
 63    function basename (full_path in varchar,
 64  			  suffix    in varchar default null,
 65  			  separator in char default '/')
 66    return varchar
 67  	   --:: like bash basename or gnu basename, returns the filename of a path optionally
 68  	   --:: stripping the specified file extension
 69  	   --::>
 70    is
 71  	    my_basename varchar(256);
 72    begin
 73  	     dbms_output.put_line('basename ' || full_path);
 74  	     my_basename := substr(full_path, instr(full_path,separator,-1)+1);
 75  	     dbms_output.put_line('my_basename' || my_basename);
 76  	     if suffix is not null then
 77  		 my_basename := substr(my_basename, 1, instr(my_basename, suffix, -1)-1);
 78  	     end if;
 79  
 80  	    return my_basename;
 81    end basename;
 82  
 83    /*
 84    function get_my_tracefile return clob is
 85    begin
 86  	  return get_tracefile(basename(get_my_tracefile_name));
 87    end get_my_tracefile;
 88    */
 89    function get_file(directory in varchar, file_name in varchar)
 90    return clob is
 91  	  my_clob	  clob;
 92  	  my_bfile	  bfile;
 93  	  my_dest_offset  integer := 1;
 94  	  my_src_offset   integer := 1;
 95  	  my_lang_context integer := dbms_lob.default_lang_ctx;
 96  	  my_warning	  integer;
 97    begin
 98  	  my_bfile := bfilename(directory, file_name);
 99  
100  	  dbms_lob.CreateTemporary(my_clob, FALSE, dbms_lob.CALL);
101  	  dbms_lob.FileOpen(my_bfile);
102  	  dbms_output.put_line('get_tracefile: before LoadClobFromFile');
103  
104  	  dbms_lob.LoadClobFromFile (
105  	    dest_lob	 => my_clob,
106  	    src_bfile	 => my_bfile,
107  	    amount	 => dbms_lob.lobmaxsize,
108  	    dest_offset  => my_dest_offset,
109  	    src_offset	 => my_src_offset,
110  	    bfile_csid	 => dbms_lob.default_csid,
111  	    lang_context => my_lang_context,
112  	    warning	 => my_warning
113  	  );
114  	  dbms_output.put_line('get_tracefile warning: ' || my_warning);
115  	  dbms_lob.FileClose(my_bfile);
116  
117  	  return my_clob;
118    end get_file;
119  
120  
121  
122  begin dbms_output.ENABLE(1000000) ; -- set_context;
123  end file_helper;
124  --/>
125  
126  --#<
127  /

Package body created.

SQL> show errors
No errors.
SQL> --#>
SQL> exit
